package Aufgabe_8;

public class TestingTrees {
	public static void main(final String[] args) {
		// final BinarySearchTree test = new BinarySearchTree();
		// test.generateRandomUnsortedTree(10, 1, 2);
		// // TreeNode result = test.search(2);
		// // System.out.println(result != null ? result.getData() : -1);
		// test.printElems();
		// test.delete(2);
		// System.out.println();
		// test.printElems();

		final BinarySearchTree two = new BinarySearchTree();

		System.out.println("Generation of nodes");
//		two.generateRandomTree(100, 0, 10000);

		 two.insert(6);
		 two.insert(2);
		 two.insert(1);
		 two.insert(4);
		 two.insert(3);
		 two.insert(5);
		 two.insert(8);
		 two.insert(7);
		 two.insert(9);
		// final Scanner console = new Scanner(System.in);
		// while (console.hasNextInt()) {
		// final int read = console.nextInt();
		// if (read == -1)
		// break;
		// two.insert(read);
		// two.printElems();
		// }
		System.out.println("Wire generation");
		two.generateInOrderWire();
		// two.printElems();
		two.printInOrder();
	}

}
