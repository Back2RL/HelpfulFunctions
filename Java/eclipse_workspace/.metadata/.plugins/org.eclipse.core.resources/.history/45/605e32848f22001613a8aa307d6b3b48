package Aufgabe_8;

public class TreeNode {

	private int data;
	private TreeNode parent;
	private TreeNode leftChild;
	private TreeNode rightChild;
	/**
	 * stores information whether left-/rightchild are links or childnodes used
	 * instead of 2 seperate booleans
	 */
	private byte linkInformation;
	private static final byte leftLinkMask = 1 << 2;
	private static final byte rightLinkMask = 1;

	public boolean isLeftLink() {
		return (linkInformation & leftLinkMask) == leftLinkMask;
	}

	public void setLeftIsLink(final boolean isLink) {
		if (isLink) {
			linkInformation |= leftLinkMask;
		} else {
			linkInformation &= ~leftLinkMask;
		}
	}

	public void setRightIsLink(final boolean isLink) {
		if (isLink) {
			linkInformation |= rightLinkMask;
		} else {
			linkInformation &= ~rightLinkMask;
		}
	}

	public boolean isRightLink() {
		return (linkInformation & rightLinkMask) == rightLinkMask;
	}

	public TreeNode(TreeNode parent, int data) {
		setParent(parent);
		setData(data);
	}

	public TreeNode getParent() {
		return parent;
	}

	public void setParent(TreeNode parent) {
		this.parent = parent;
	}

	public int getData() {
		return data;
	}

	public void setData(int data) {
		this.data = data;
	}

	public TreeNode getLeftChild() {
		return leftChild;
	}

	public void setLeftChild(TreeNode leftChild) {
		this.leftChild = leftChild;
	}

	public TreeNode getRightChild() {
		return rightChild;
	}

	public void setRightChild(TreeNode rightChild) {
		this.rightChild = rightChild;
	}

}
