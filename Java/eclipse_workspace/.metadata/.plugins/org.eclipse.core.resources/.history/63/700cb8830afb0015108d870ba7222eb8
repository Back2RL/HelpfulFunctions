import java.io.File;
import java.io.IOException;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;
import java.util.TreeSet;

public class IndexManager {

	private final String indexFileName = "index.csv";
	private String indexPath;
	private File indexDirectory;
	private File index;
	private String indexDirectoryPath;
	private Map<String, TreeSet<File>> indexFromFile = new TreeMap<String, TreeSet<File>>();

	public Map<String, TreeSet<File>> getIndexFromFile() {
		return indexFromFile;
	}

	IndexManager(String pathToIndexDirectory) {
		try {
			indexDirectory = new File(pathToIndexDirectory);
			if (!indexDirectory.isDirectory()) {
				throw new IllegalArgumentException("Given path does not point to a directory");
			}
			indexDirectoryPath = indexDirectory.getAbsolutePath() + File.separatorChar;
		} catch (Exception e) {
			e.printStackTrace();
		}
		loadIndex();
	}

	boolean loadIndex() {
		indexPath = indexDirectoryPath + indexFileName;
		System.out.println(indexPath);
		index = new File(indexPath);
		if (index.exists()) {
			createIndexBackup();
			return true;
		} else {
			System.out.println(indexFileName + " does not exist and will be created.");
			return false;
		}
	}

	void createIndexBackup() {
		try {
			Files.copy(index.toPath(),
					new File(indexDirectoryPath + indexFileName + "_" + timeFromLong(System.currentTimeMillis()))
							.toPath());
		} catch (FileAlreadyExistsException e) {
			System.out.println("There is already a valid backup file");
		} catch (IOException e) {
			e.printStackTrace();
		}

		for (File file : indexDirectory.listFiles()) {
			System.out.println(file.getName());
		}
	}

	String timeFromLong(long time) {
		Date date = new Date(time);
		DateFormat formatter = new SimpleDateFormat("uuuu-MM-dd-HH-mm-ss-SSS");
		return formatter.format(date);
	}
}
